(**************************************************************************)
(*                                                                        *)
(*                        TypeRex OCaml Tools                             *)
(*                                                                        *)
(*                             OCamlPro                                   *)
(*                                                                        *)
(*  Copyright 2011-2012 OCamlPro                                          *)
(*  All rights reserved.  See accompanying files for the terms under      *)
(*  which this file is distributed. In doubt, contact us at               *)
(*  contact@ocamlpro.com (http://www.ocamlpro.com/)                       *)
(**************************************************************************)

(*
begin library "ocplib-subst"
  files = [ "stringSubst.ml" ]
  requires = [ "ocplib-lang" ]
end
*)

begin library "ocplib-subst-worker"
  files = [ "substWorker.ml" ]
  requires = [ "ocplib-system" "ocplib-lang" ]
end

begin program "ocp-subst-config"
  files = [ "substMain.ml" ]
  requires = [ "ocplib-subst-worker" ]

(* tests can be added to a program *)
  test_args = [ "-o" "-" "-str" "%{test}%" "SUCCESS"
                  "%{tests}%/%{test}%.input"
              ]
  test_stdout = [  "%{tests}%/%{test}%.output" ]
  tests = [
        "test1"
        "test2"
  ]

end

begin test "ocp-subst-config.test-suite1"
(* if no files, search requires for a program to test *)
  files = []
  requires = [ "ocp-subst-config" ]

  test_args = [ "-o" "-" "-str" "%{test}%" "SUCCESS"
                  "%{tests}%/%{test}%.input"
              ]
  test_stdout = [  "%{tests}%/%{test}%.output" ]
  tests = [
        "test1"
        "test2"
  ]

end

begin test "ocp-subst-config.test-suite2"
(* build the program, only if testing *)
  files = [ "substMain.ml" ]
  requires = [ "ocplib-subst-worker" ]

  test_exit = "0" (* expected correct exit status is 0 *)
  test_args = [ "-o" "-" "-str" "%{test}%" "SUCCESS"
                  "%{tests}%/%{test}%.input"
              ]
  tests = [
        "test1" (  test_stdout = [  "%{tests}%/%{test}%.output" ] )
        "test2" (* don't check output, only status code *)
  ]
end

