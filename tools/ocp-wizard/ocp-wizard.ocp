(**************************************************************************)
(*                                                                        *)
(*                        TypeRex OCaml Studio                            *)
(*                                                                        *)
(*                           Tiphaine Turpin                              *)
(*                                                                        *)
(*  Copyright 2011-2012 INRIA Saclay - Ile-de-France / OCamlPro           *)
(*  All rights reserved.  This file is distributed under the terms of     *)
(*  the GNU Public License version 3.0.                                   *)
(*                                                                        *)
(*  TypeRex is distributed in the hope that it will be useful,            *)
(*  but WITHOUT ANY WARRANTY; without even the implied warranty of        *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *)
(*  GNU General Public License for more details.                          *)
(*                                                                        *)
(**************************************************************************)

(*

begin library "lib-profile"
  files = ["common/profile.ml"]
  requires = ["unix"]
end

begin program "profile"
  files = ["common/profileMain.ml"]
  requires = ["lib-profile"]
end
*)

begin library "ocp-wizard-lib"
  files = [

    "common/util.ml";
    "common/edit.ml";

    "semantics/resolve.ml";
    "semantics/findName.ml";
    "semantics/renamePropagation.ml";
    "semantics/renameLid.ml";
    "semantics/ocpWizard.ml";

    "syntax/gapBuffer.ml";
    "syntax/tokenBuffer.ml";
(*
    "syntax/recoveringOCamlParser.ml" (generated=true);
*)
    "syntax/ocamlTokenize.ml" (no_mli = true);
    "syntax/completion.ml" (nodeps = [ "OcamlBuffer" ])
    "syntax/ocamlBuffer.ml"
    "syntax/colorize.ml";

    "main/exceptions.ml";
    "main/owzUI.ml";
    "main/owzServer.ml";

  ]
  requires = [
    "complib-env" "ocaml-compiler" "ocaml-bincompat" "ocaml-program" "ocaml-doc-parsing"
    "str" "ocplib-extract" "ocp-ide-lib" "ocplib-system"
    (*"recovering-parser-lib"*)
  ]

end

(*
begin program "recovering-parser"
  requires = [ "ocplib-lang" "yacclib" ]
  files = ["syntax/recoveringParsing.ml"]
end

begin library "recovering-parser-lib"
  files = ["syntax/cst.ml"]
end
*)

begin program "ocp-wizard"
(*  ocamlyacc = "./tools/ocp-wizard/ocamlyacc.sh" *)
  files = [

(*
    "completion/interface.mli";
    "completion/stdr_types.ml";
    "completion/lpp.ml";
    "completion/syntactic/tags.ml";
    "completion/syntactic/parsing_env.ml";
    "completion/syntactic/owz_parser.mly";
    "completion/syntactic/owz_lexer.mll";
(* Unplugged the backtracking parser to avoid depending on binannot
    "common/incLexer.ml";
    "common/incParser.ml";
*)
    "completion/syntactic/syntax_completion.ml";
    "completion/extraction/path_extraction.ml";
    "completion/extraction/proposal_extraction.ml";
    "completion/typing/expression_typing.ml";
    "completion/filtering/match_filter.ml";
    "completion/filtering/path_filter.ml";
    "completion/filtering/proposal_filtering.ml";
    "completion/printing/xml_printer.ml";
    "completion/printing/ocaml_printer.ml";
    "completion/printing/proposal_printing.ml";
    "completion/completion.ml";
*)

    (* Color themes. Last one will be the default ! *)
    "coloring_themes/tuareg_like.ml"
    "coloring_themes/syntactic.ml"

    "main/owzMain.ml"

  ]
  requires = [ "ocp-wizard-lib" "ocp-rpc" (*"dynlink"*) ]
end

(*
begin program "ocp-grep"
  files = [
    "main/ocp_grep.ml"
  ]
  requires = [ "ocp-wizard-lib" ]
end
*)

